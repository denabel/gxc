% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/point_link_daily.R
\name{point_link_daily}
\alias{point_link_daily}
\title{Link Spatial Points with Copernicus Earth Observation Daily Indicators}
\usage{
point_link_daily(
  indicator,
  data,
  date_var,
  time_span = 0,
  time_lag = 0,
  buffer = 0,
  baseline = FALSE,
  order = "ymd",
  path = "./data/raw",
  catalogue = "derived-era5-land-daily-statistics",
  statistic = "daily_mean",
  time_zone = "utc+00:00",
  keep_raw = FALSE,
  parallel = FALSE,
  chunk_size = 50
)
}
\arguments{
\item{indicator}{Character string specifying the indicator to download (e.g., "2m_temperature").
Allowed indicators differ by catalogue. See the \strong{Details} section for available indicators.}

\item{data}{An \code{sf} object containing the spatial data (polygons or points).}

\item{date_var}{Character string specifying the name of the date variable in \code{data}.}

\item{time_span}{Integer specifying the time span in days for averaging the climate indicator values prior to linking
with the spatial data (default is \code{0}).}

\item{time_lag}{Integer specifying the time lag in days to shift the \code{date_var} backward (default is \code{0}).}

\item{buffer}{Numeric value specifying the buffer radius (in kilometers) to be applied around each point.
The default is \code{0}, corresponding to a direct cell match; values greater than 0 generate a spatial buffer
around each point for aggregated extraction.}

\item{baseline}{Either \code{FALSE} (default) or a character vector of length 2 specifying the baseline
period in years. For example, \code{baseline = c("1980", "2010")} uses the years 1980 to 2010 as the baseline.
If \code{FALSE}, no baseline calculation is performed.}

\item{order}{Character string specifying the date format for parsing \code{date_var} (default is \code{"ymd"}).}

\item{path}{Character string specifying the directory path where data will be downloaded and/or stored
(default is \code{"./data/raw"}).}

\item{catalogue}{Character string specifying which ERA5 catalogue to use.
Options are \code{"derived-era5-land-daily-statistics"} (default) or \code{"derived-era5-single-levels-daily-statistics"}.}

\item{statistic}{Character string specifying the type of daily statistic to download.
Options are \code{"daily_mean"} (default), \code{"daily_maximum"}, and \code{"daily_minimum"}.}

\item{time_zone}{Character string specifying the time zone to use (default is \code{"utc+00:00"}).}

\item{keep_raw}{Logical value indicating whether to keep the downloaded raw \code{.grib} files.
If \code{FALSE}, the files are deleted after processing (default is \code{FALSE}).}

\item{parallel}{Logical indicating whether to use parallel processing with chunking.
Default is \code{FALSE} (i.e. sequential execution).}

\item{chunk_size}{Integer specifying the number of observations per chunk when parallelizing.
Default is \code{50}.}
}
\value{
An \code{sf} object with the original spatial data and appended climate indicator values. If a baseline
period is specified, additional columns for baseline values and deviations are included.
}
\description{
Downloads and processes Copernicus Earth observation data (ERA5) based on daily temporal parameters,
and extracts the relevant daily climate indicator values for the provided spatial points. The function
constructs daily time sequences based on a specified date variable and time adjustments (time_lag and time_span),
downloads the corresponding daily statistics (e.g., daily mean, maximum, or minimum), and links these values to
the spatial points. An optional spatial buffer (in kilometers) can be specified so that instead of a direct cell match,
the mean value over the buffer is extracted. If a baseline period is provided (e.g., \code{baseline = c("1980", "2010")}),
baseline daily statistics are downloaded for the specified period and appended as a separate attribute.
}
\details{
This function interacts with the Copernicus Climate Data Store (CDS) API to download ERA5 daily reanalysis data for a specified
climate indicator and time period based on daily temporal resolution. The input spatial points (an sf object) are first optionally
buffered (if \code{buffer > 0}), then processed to determine the geographic extent. The time dimension is adjusted using the specified
\code{time_lag} and \code{time_span} (both in days) to create daily time sequences based on the given \code{date_var}. The function downloads the
corresponding daily statistics (e.g., daily mean, maximum, or minimum) and extracts these values for each point. When no buffer is
specified, the value from the directly underlying raster cell is extracted; if a buffer is specified, the mean value over the buffer area
is computed. If a baseline period is provided (e.g., \code{baseline = c("1980", "2010")}), baseline daily statistics are downloaded for the
specified period and appended as a new attribute. Parallel processing via \code{future.apply::future_lapply} is supported.

\strong{Note:} Users must have a CDS account and have their API key configured for \code{ecmwfr}.

\strong{Parallel Processing:}
This function can use parallel processing with chunking via
\code{future.apply::future_lapply} when \code{parallel = TRUE}. If \code{parallel = FALSE},
the function runs sequentially. When \code{parallel = TRUE}, set your parallel
plan (for example, using \code{future::plan(multisession, workers = 6)})
before calling this function. If no plan is set before but \code{parallel = TRUE},
the function will run sequentially through the chunks, which will most
likely increase duration.
}
\examples{
\dontrun{
library(sf)
library(dplyr)

# Create sample point data (sf object)
pts <- data.frame(lon = c(13.4, 11.6, 9.9),
                  lat = c(52.5, 51.3, 50.1),
                  date_column = c("2014-08-01", "2014-08-01", "2014-08-01"))
pts_sf <- st_as_sf(pts, coords = c("lon", "lat"), crs = 4326)

# Example: Direct extraction (buffer = 0)
result1 <- point_link_daily(
  indicator = "2m_temperature",
  data = pts_sf,
  date_var = "date_column",
  time_span = 0,
  time_lag = 0,
  buffer = 0,
  baseline = FALSE,
  order = "ymd",
  path = "./data/raw",
  catalogue = "derived-era5-land-daily-statistics",
  statistic = "daily_mean",
  time_zone = "utc+00:00",
  keep_raw = FALSE
)

# Example: Aggregated extraction with a 5 km buffer
result2 <- point_link_daily(
  indicator = "2m_temperature",
  data = pts_sf,
  date_var = "date_column",
  time_span = 0,
  time_lag = 0,
  buffer = 5,
  baseline = c("1980", "2010"),
  order = "ymd",
  path = "./data/raw",
  catalogue = "derived-era5-land-daily-statistics",
  statistic = "daily_mean",
  time_zone = "utc+00:00",
  keep_raw = TRUE
)

# View the results:
head(result1)
head(result2)
}

}
